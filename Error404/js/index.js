var scene,camera,fieldOfView,aspectRatio,nearPlane,farPlane,shadowLight,light,renderer,container;var HEIGHT,WIDTH,windowHalfX,windowHalfY,xLimit,yLimit;var fish,bodyFish,tailFish,topFish,rightIris,leftIris,rightEye,leftEye,lipsFish,tooth1,tooth2,tooth3,tooth4,tooth5;var fishFastColor={r:255,g:0,b:224};fishSlowColor={r:0,g:207,b:255};angleFin=0;var colors=['#dff69e','#00ceff','#002bca','#ff00e0','#3f159f','#71b583','#00a2ff'];var flyingParticles=[];waitingParticles=[];maxParticlesZ=600;var speed={x:0,y:0};var smoothing=10;var mousePos={x:0,y:0};var stats;var halfPI=Math.PI/2;function init(){scene=new THREE.Scene();HEIGHT=window.innerHeight;WIDTH=window.innerWidth;aspectRatio=WIDTH/HEIGHT;fieldOfView=60;nearPlane=1;farPlane=2000;camera=new THREE.PerspectiveCamera(fieldOfView,aspectRatio,nearPlane,farPlane);camera.position.z=1000;renderer=new THREE.WebGLRenderer({alpha:true,antialias:true});renderer.setSize(WIDTH,HEIGHT);container=document.getElementById('world');container.appendChild(renderer.domElement);var ang=(fieldOfView/2)*Math.PI/180;yLimit=(camera.position.z+maxParticlesZ)*Math.tan(ang);xLimit=yLimit*camera.aspect;windowHalfX=WIDTH/2;windowHalfY=HEIGHT/2;window.addEventListener('resize',onWindowResize,false);document.addEventListener('mousemove',handleMouseMove,false);document.addEventListener('touchstart',handleTouchStart,false);document.addEventListener('touchend',handleTouchEnd,false);document.addEventListener('touchmove',handleTouchMove,false);}
function onWindowResize(){HEIGHT=window.innerHeight;WIDTH=window.innerWidth;windowHalfX=WIDTH/2;windowHalfY=HEIGHT/2;renderer.setSize(WIDTH,HEIGHT);camera.aspect=WIDTH/HEIGHT;camera.updateProjectionMatrix();var ang=(fieldOfView/2)*Math.PI/180;yLimit=(camera.position.z+maxPartcilesZ)*Math.tan(ang);xLimit=yLimit*camera.aspect;}
function handleMouseMove(event){mousePos={x:event.clientX,y:event.clientY};updateSpeed()}
function handleTouchStart(event){if(event.touches.length>1){event.preventDefault();mousePos={x:event.touches[0].pageX,y:event.touches[0].pageY};updateSpeed();}}
function handleTouchEnd(event){mousePos={x:windowHalfX,y:windowHalfY};updateSpeed();}
function handleTouchMove(event){if(event.touches.length==1){event.preventDefault();mousePos={x:event.touches[0].pageX,y:event.touches[0].pageY};updateSpeed();}}
function updateSpeed(){speed.x=(mousePos.x/WIDTH)*100;speed.y=(mousePos.y-windowHalfY)/10;}
function loop(){fish.rotation.z+=((-speed.y/50)-fish.rotation.z)/smoothing;fish.rotation.x+=((-speed.y/50)-fish.rotation.x)/smoothing;fish.rotation.y+=((-speed.y/50)-fish.rotation.y)/smoothing;fish.position.x+=(((mousePos.x-windowHalfX))-fish.position.x)/smoothing;fish.position.y+=((-speed.y*10)-fish.position.y)/smoothing;rightEye.rotation.z=leftEye.rotation.z=-speed.y/150;rightIris.position.x=leftIris.position.y=-10-speed.y/2;rightEye.scale.set(1,1-(speed.x/150),1);leftEye.scale.set(1,1-(speed.x/150),1);var s2=speed.x/100;var s3=speed.x/300;angleFin+=s2;var backTailCycle=Math.cos(angleFin);var sideFinsCycle=Math.sin(angleFin/5);tailFish.rotation.y=backTailCycle*.5;topFish.rotation.x=sideFinsCycle*.5;sideRightFish.rotation.x=halfPI+sideFinsCycle*.2;sideLeftFish.rotation.x=halfPI+sideFinsCycle*.2;var rvalue=(fishSlowColor.r+(fishFastColor.r-fishSlowColor.r)*s2)/255;var gvalue=(fishSlowColor.g+(fishFastColor.g-fishSlowColor.g)*s2)/255;var bvalue=(fishSlowColor.b+(fishFastColor.b-fishSlowColor.b)*s2)/255;bodyFish.material.color.setRGB(rvalue,gvalue,bvalue);lipsFish.material.color.setRGB(rvalue,gvalue,bvalue);fish.scale.set(1+s3,1-s3,1-s3);for(var i=0;i<flyingParticles.length;i++){var particle=flyingParticles[i];particle.rotation.y+=(1/particle.scale.x)*.05;particle.rotation.x+=(1/particle.scale.x)*.05;particle.rotation.z+=(1/particle.scale.x)*.05;particle.position.x+=-10-(1/particle.scale.x)*speed.x*.2;particle.position.y+=(1/particle.scale.x)*speed.y*.2;if(particle.position.x<-xLimit-80){scene.remove(particle);waitingParticles.push(flyingParticles.splice(i,1)[0]);i--;}}
renderer.render(scene,camera);stats.update();requestAnimationFrame(loop);}
function createStats(){stats=new Stats();stats.domElement.style.position='absolute';stats.domElement.style.top='0px';stats.domElement.style.right='0px';container.appendChild(stats.domElement);}
function createLight(){light=new THREE.HemisphereLight(0xffffff,0xffffff,.3)
scene.add(light);shadowLight=new THREE.DirectionalLight(0xffffff,.8);shadowLight.position.set(1,1,1);scene.add(shadowLight);}
function createFish(){fish=new THREE.Group();var bodyGeom=new THREE.BoxGeometry(120,120,120);var bodyMat=new THREE.MeshLambertMaterial({color:0x80f5fe,shading:THREE.FlatShading});bodyFish=new THREE.Mesh(bodyGeom,bodyMat);var tailGeom=new THREE.CylinderGeometry(0,60,60,4,false);var tailMat=new THREE.MeshLambertMaterial({color:0xff00dc,shading:THREE.FlatShading});tailFish=new THREE.Mesh(tailGeom,tailMat);tailFish.scale.set(.8,1,.1);tailFish.position.x=-60;tailFish.rotation.z=-halfPI;var lipsGeom=new THREE.BoxGeometry(25,10,120);var lipsMat=new THREE.MeshLambertMaterial({color:0x80f5fe,shading:THREE.FlatShading});lipsFish=new THREE.Mesh(lipsGeom,lipsMat);lipsFish.position.x=65;lipsFish.position.y=-47;lipsFish.rotation.z=halfPI;topFish=new THREE.Mesh(tailGeom,tailMat);topFish.scale.set(.8,1,.1);topFish.position.x=-20;topFish.position.y=60;topFish.rotation.z=-halfPI;sideRightFish=new THREE.Mesh(tailGeom,tailMat);sideRightFish.scale.set(.8,1,.1);sideRightFish.rotation.x=halfPI;sideRightFish.rotation.z=-halfPI;sideRightFish.position.x=0;sideRightFish.position.y=-50;sideRightFish.position.z=-60;sideLeftFish=new THREE.Mesh(tailGeom,tailMat);sideLeftFish.scale.set(.8,1,.1);sideLeftFish.rotation.x=halfPI;sideLeftFish.rotation.z=-halfPI;sideLeftFish.position.x=0;sideLeftFish.position.y=-50;sideLeftFish.position.z=60;var eyeGeom=new THREE.BoxGeometry(40,40,5);var eyeMat=new THREE.MeshLambertMaterial({color:0xffffff,shading:THREE.FlatShading});rightEye=new THREE.Mesh(eyeGeom,eyeMat);rightEye.position.z=-60;rightEye.position.x=25;rightEye.position.y=-10;var irisGeom=new THREE.BoxGeometry(10,10,3);var irisMat=new THREE.MeshLambertMaterial({color:0x330000,shading:THREE.FlatShading});rightIris=new THREE.Mesh(irisGeom,irisMat);rightIris.position.z=-65;rightIris.position.x=35;rightIris.position.y=-10;leftEye=new THREE.Mesh(eyeGeom,eyeMat);leftEye.position.z=60;leftEye.position.x=25;leftEye.position.y=-10;leftIris=new THREE.Mesh(irisGeom,irisMat);leftIris.position.z=65;leftIris.position.x=35;leftIris.position.y=-10;var toothGeom=new THREE.BoxGeometry(20,4,20);var toothMat=new THREE.MeshLambertMaterial({color:0xffffff,shading:THREE.FlatShading});tooth1=new THREE.Mesh(toothGeom,toothMat);tooth1.position.x=65;tooth1.position.y=-35;tooth1.position.z=-50;tooth1.rotation.z=halfPI;tooth1.rotation.x=-halfPI;tooth2=new THREE.Mesh(toothGeom,toothMat);tooth2.position.x=65;tooth2.position.y=-30;tooth2.position.z=-25;tooth2.rotation.z=halfPI;tooth2.rotation.x=-Math.PI/12;tooth3=new THREE.Mesh(toothGeom,toothMat);tooth3.position.x=65;tooth3.position.y=-25;tooth3.position.z=0;tooth3.rotation.z=halfPI;tooth4=new THREE.Mesh(toothGeom,toothMat);tooth4.position.x=65;tooth4.position.y=-30;tooth4.position.z=25;tooth4.rotation.z=halfPI;tooth4.rotation.x=Math.PI/12;tooth5=new THREE.Mesh(toothGeom,toothMat);tooth5.position.x=65;tooth5.position.y=-35;tooth5.position.z=50;tooth5.rotation.z=halfPI;tooth5.rotation.x=Math.PI/8;fish.add(bodyFish);fish.add(tailFish);fish.add(topFish);fish.add(sideRightFish);fish.add(sideLeftFish);fish.add(rightEye);fish.add(rightIris);fish.add(leftEye);fish.add(leftIris);fish.add(tooth1);fish.add(tooth2);fish.add(tooth3);fish.add(tooth4);fish.add(tooth5);fish.add(lipsFish);fish.rotation.y=-Math.PI/4;scene.add(fish);}
function createParticle(){var particle,geometryCore,ray,w,h,d,sh,sv;var rnd=Math.random();if(rnd<.33){w=10+Math.random()*30;h=10+Math.random()*30;d=10+Math.random()*30;geometryCore=new THREE.BoxGeometry(w,h,d);}
else if(rnd<.66){ray=10+Math.random()*20;geometryCore=new THREE.TetrahedronGeometry(ray);}
else{ray=5+Math.random()*30;sh=2+Math.floor(Math.random()*2);sv=2+Math.floor(Math.random()*2);geometryCore=new THREE.SphereGeometry(ray,sh,sv);}
var materialCore=new THREE.MeshLambertMaterial({color:getRandomColor(),shading:THREE.FlatShading});particle=new THREE.Mesh(geometryCore,materialCore);return particle;}
function getParticle(){if(waitingParticles.length){return waitingParticles.pop();}else{return createParticle();}}
function flyParticle(){var particle=getParticle();particle.position.x=xLimit;particle.position.y=-yLimit+Math.random()*yLimit*2;particle.position.z=Math.random()*maxParticlesZ;var s=.1+Math.random();particle.scale.set(s,s,s);flyingParticles.push(particle);scene.add(particle);}
function getRandomColor(){var col=hexToRgb(colors[Math.floor(Math.random()*colors.length)]);var threecol=new THREE.Color("rgb("+col.r+","+col.g+","+col.b+")");return threecol;}
function hexToRgb(hex){var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null;}
init();createStats();createLight();createFish();createParticle();loop();setInterval(flyParticle,70);